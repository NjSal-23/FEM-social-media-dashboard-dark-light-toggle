@use '../util' as *;

.toggle {
  border: none;
  display: grid;
  grid-template-columns: 1fr rem(50);
  grid-template-rows: 1fr 1fr;
  gap: rem(2) rem(8);
  
  

  label {
    font-size: rem(14);
    align-self: center;
    color: var(--toggle-text);
    font-weight: bold;

    &[for="dark"] {
      grid-column: 1 / 2;
      text-align: right;
      
    }
    &[for="light"] {
      grid-column: 2/3;
      text-align: left;

    }
  }

  // &[for="___"] {__} --> pseudo selector for the labels within fieldset

  &__wrapper {
    height: rem(24);
    width: rem(48);
    grid-column: 2 / 3;
    grid-row: 1 / 2;
    position: relative;
  }
  // container for the radio buttons, background, and toggle button


  input[type="radio"] {
    opacity: 0;
    cursor: pointer;
		height: 100%;
    width: 40%;
    z-index: 1;
    display: inline-block;
    position: relative;
    margin: 0;

    &:focus ~ .toggle__button {
			border: 2px solid white;
    }
  }

  //used opacity: 0 to ensure the options are still accessible to screen readers

  &__background {
    display: block;
    position: absolute;
    pointer-events: none;
    height: 100%;
    width: rem(48);
    top: 0;
    border-radius: rem(12);
    height: 100%;
    z-index: 0;
    background: var(--toggle-background);
  }

  //contains the background of the toggle

  &__button {
    position: absolute;
    left: rem(3);
    top: rem(3);
    right: 100%;
    width: rem(18);
    height: rem(18);
    border-radius: 50%;
    background-color: var(--button-color);
    transition: all 150ms ease-in-out;
    z-index: 2;

    }
    // contains the toggle button

    #light:checked ~ .toggle__button {
      right: rem(3);
      left: calc(100% - rem(21));
    }
    // when the light radio button is checked, the toggle button moves to the right
  
}

.toggle__button:hover {
  cursor: pointer;
}

.toggle__label:hover {
  cursor: pointer;
}
